// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RateMyCollegeClub.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(CollegeClubsDbContext))]
    partial class CollegeClubsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RateMyCollegeClub.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Clubs related to technology. Includes Computer Science, Computer and Electrical Engineering.",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Clubs related to Sports. Includes physical and mental sports.",
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("RateMyCollegeClub.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ClubLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Clubs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ClubLocation = "Engineering Center Basement, Room 100",
                            CreatedAt = new DateTime(2025, 1, 23, 21, 11, 22, 625, DateTimeKind.Utc).AddTicks(70),
                            Description = "Robotics Club",
                            IsActive = true,
                            Name = "Tech Robotics Association"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ClubLocation = "Livermore Center, Room 101",
                            CreatedAt = new DateTime(2025, 1, 23, 21, 11, 22, 625, DateTimeKind.Utc).AddTicks(990),
                            Description = "Software Engineering Club",
                            IsActive = true,
                            Name = "Google Development Student Club"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            ClubLocation = "The SUB, Second floor, Room 237.",
                            CreatedAt = new DateTime(2025, 1, 23, 21, 11, 22, 625, DateTimeKind.Utc).AddTicks(992),
                            Description = "A club for playing chess",
                            IsActive = true,
                            Name = "Chess Club"
                        });
                });

            modelBuilder.Entity("RateMyCollegeClub.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("InclusivityRating")
                        .HasColumnType("int");

                    b.Property<int>("LeadershipRating")
                        .HasColumnType("int");

                    b.Property<int>("NetworkingRating")
                        .HasColumnType("int");

                    b.Property<int>("OverallRating")
                        .HasColumnType("int");

                    b.Property<int>("SkillsDevelopmentRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClubId = 1,
                            Comment = "It's a good club overall. Friendly people in general.",
                            CreatedAt = new DateTime(2025, 1, 23, 21, 11, 22, 625, DateTimeKind.Utc).AddTicks(1523),
                            InclusivityRating = 4,
                            LeadershipRating = 2,
                            NetworkingRating = 3,
                            OverallRating = 4,
                            SkillsDevelopmentRating = 5
                        },
                        new
                        {
                            Id = 2,
                            ClubId = 1,
                            Comment = "Plenty of volunteering opportunities. One of the highlights about the club is the annual VEX U competitions.",
                            CreatedAt = new DateTime(2025, 1, 23, 21, 11, 22, 625, DateTimeKind.Utc).AddTicks(2660),
                            InclusivityRating = 5,
                            LeadershipRating = 4,
                            NetworkingRating = 2,
                            OverallRating = 4,
                            SkillsDevelopmentRating = 4
                        },
                        new
                        {
                            Id = 3,
                            ClubId = 2,
                            Comment = "The GDSC club has its ups and downs. Networking is one of its prime benefits.",
                            CreatedAt = new DateTime(2025, 1, 23, 21, 11, 22, 625, DateTimeKind.Utc).AddTicks(2662),
                            InclusivityRating = 2,
                            LeadershipRating = 4,
                            NetworkingRating = 5,
                            OverallRating = 3,
                            SkillsDevelopmentRating = 3
                        });
                });

            modelBuilder.Entity("RateMyCollegeClub.Models.SavedClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SavedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("SavedClubs");
                });

            modelBuilder.Entity("RateMyCollegeClub.Models.Club", b =>
                {
                    b.HasOne("RateMyCollegeClub.Models.Category", "Category")
                        .WithMany("Clubs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RateMyCollegeClub.Models.Review", b =>
                {
                    b.HasOne("RateMyCollegeClub.Models.Club", "Club")
                        .WithMany("Reviews")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("RateMyCollegeClub.Models.SavedClub", b =>
                {
                    b.HasOne("RateMyCollegeClub.Models.Club", "Club")
                        .WithMany("SavedClubs")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("RateMyCollegeClub.Models.Category", b =>
                {
                    b.Navigation("Clubs");
                });

            modelBuilder.Entity("RateMyCollegeClub.Models.Club", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SavedClubs");
                });
#pragma warning restore 612, 618
        }
    }
}
